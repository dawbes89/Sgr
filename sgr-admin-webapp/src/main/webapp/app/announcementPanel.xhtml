<!DOCTYPE composition>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:p="http://primefaces.org/ui" template="template.xhtml">

	<ui:define name="content">
		<!-- MAIN TABLE -->
		<h:form id="root">
			<p:remoteCommand name="onload" action="#{announcementPanel.onLoad}"
				autoRun="true" update=":root:table" />

			<p:outputPanel id="panel" style="text-align:center;" layout="block">

				<!-- REVIEW tutaj powinien pojewić się przycisk dodawania i pod nim separator -->
				<!-- ogólnie przyciski wszystkie nie muszą mieć id jeśli ich nie wywołujemy w innym miejscu -->
				<p:dataTable value="#{announcementPanel.entities}"
					var="announcement" id="table" editable="true">
					<!-- REVIEW styl kolumn zmien na width="40" - szerokość dla jednego przyciksu, im wiejcej ich to dajemy wielokrotność -->
					<p:column style="width:50px">
						<!-- REVIEW nie potrzeba id -->
						<p:commandButton id="selectButton" update=":details:panel"
							oncomplete="PF('detailsDialog').show()" icon="ui-icon-info"
							title="#{sgr_translation.button_details}">
							<f:setPropertyActionListener value="#{announcement}"
								target="#{announcementPanel.entity}" />
						</p:commandButton>
					</p:column>
					<!-- REVIEW to co ma się wyświetlać dawaj w <p:outputLabel value="#{announcement.date}" /> -->
					<!-- fajnie się wtedy formatuje kod -->
					<p:column headerText="#{sgr_translation.form_announcement_date}"
						filterBy="#{announcement.date}">#{announcement.date}
                   </p:column>
					<p:column headerText="#{sgr_translation.form_announcement_title}"
						filterBy="#{announcement.title}" filterMatchMode="contains">#{announcement.title}
                   </p:column>
					<!-- REVIEW width="80" -->
					<p:column style="width:80px">
						<!-- REVIEw nie potrzeba id, niżej też nie, i zmien kolejnośc przycisków najpierw update -->
						<p:commandButton id="deleteAnnouncement"
							actionListener="#{announcementPanel.remove(announcement.id)}"
							update=":root:panel" icon="ui-icon-trash">
							<!-- REVIEW tutaj nie potrzeba już update, dzieje się wyżej w przycisku -->
							<p:ajax event="dialogReturn"
								listener="#{announcementPanel.remove}" update=":root:panel" />
						</p:commandButton>
						<!-- REVIEW id j.w. -->
						<p:commandButton id="updateButton" update=":update:panel"
							oncomplete="PF('updateDialog').show()" icon="ui-icon-pencil">
							<f:setPropertyActionListener value="#{announcement}"
								target="#{announcementPanel.entity}" />
						</p:commandButton>
					</p:column>
				</p:dataTable>
				<p:separator />
				<p:commandButton value="#{sgr_translation.button_add}"
					icon="ui-icon-check" oncomplete="PF('addDialog').show()" />
			</p:outputPanel>
		</h:form>

		<!-- ADD FORM -->
		<!-- REVIEW starajmy się robić teraz okna modalne, a co za tym idzie tylko w takim wypadku form jest w dialog -->
		<!-- nie zapomnij zmienić kolejności tagów zamykających -->
		<h:form id="add">
			<!-- REVIEW widgetVar na początek -->
			<!-- pozatym zobacz sobie jakie dodałem atrybuty dla dialog w np. studentPanel  -->
			<!-- - dla formularza dodawania są nieco inne jak dla update, i pamiętaj takiej kolejności jaka tam jest -->
			<p:dialog header="#{sgr_translation.form_window_caption_add}"
				resizable="false" showEffect="explode" widgetVar="addDialog">
				<p:outputPanel id="panel">
					<p:panelGrid id="panelGrid" columns="2">
						<!-- REVIEW h:outputLabel zmieniamy na p:outputLabel, for="..." na początek deklaracji -->
						<!-- a w tłumaczeniu nie dajemy _:_* tylko sam : -->
						<!-- jeśli pole o id z for ma required gwiazdka sie wstawi -->
						<h:outputLabel
							value="#{sgr_translation.form_announcement_title} : *"
							for="title" />
						<p:inputText id="title" value="#{announcementPanel.entity.title}"
							required="true" />
						<!-- REVIEW daty nie potrzeba, lepiej wstawiać automatycznie -->
						<h:outputText
							value="#{sgr_translation.form_announcement_date} : *" />
						<p:calendar label="date" value="#{announcementPanel.entity.date}"
							pattern="yyyy-MM-dd" mask="true" required="true" />
						<!-- REVIEW uwaga jak przy pierwszej labelce -->
						<h:outputLabel
							value="#{sgr_translation.form_announcement_message} : *"
							for="message" />
						<p:inputTextarea value="#{announcementPanel.entity.message}"
							required="true" rows="5" cols="30" autoResize="false" />
						<!-- REVIEW dodaj przyciski jak w innych panelach, będziesz musiał nieco zmienić layout tego formularza -->
						<p:commandButton id="confirmAdd"
							value="#{sgr_translation.form_button_save}"
							action="#{announcementPanel.create}"
							update=":root:panel :add:panel"
							oncomplete="if (args &amp;&amp; !args.validationFailed) PF('addDialog').hide()">
						</p:commandButton>
					</p:panelGrid>
				</p:outputPanel>
			</p:dialog>
		</h:form>

		<!-- REVIEW uwagi jak wyżej -->
		<!-- UPDATE FORM -->
		<h:form id="update">
			<p:dialog header="#{sgr_translation.form_window_caption_update}"
				resizable="false" showEffect="explode" widgetVar="updateDialog">
				<p:outputPanel id="panel" style="text-align:center;" layout="block">
					<p:panelGrid id="output" columns="2" columnClasses="label, value">
						<h:outputLabel
							value="#{sgr_translation.form_announcement_title} : *"
							for="title" />
						<p:inputText id="title" value="#{announcementPanel.entity.title}"
							required="true" />
						<h:outputText
							value="#{sgr_translation.form_announcement_date} : *" />
						<p:calendar label="date" value="#{announcementPanel.entity.date}"
							pattern="yyyy-MM-dd" mask="true" required="true" />
						<h:outputLabel
							value="#{sgr_translation.form_announcement_message} : *"
							for="message" />
						<p:inputTextarea value="#{announcementPanel.entity.message}"
							required="true" rows="5" cols="30" autoResize="false" />
						<p:commandButton id="confirmUpdate"
							value="#{sgr_translation.button_update}"
							actionListener="#{announcementPanel.update(announcementPanel.entity)}"
							update=":root:panel :update:panel"
							oncomplete="if (args &amp;&amp; !args.validationFailed) PF('updateDialog').hide()">
							<p:ajax event="dialogReturn"
								listener="#{announcementPanel.update}" update=":root:panel" />
						</p:commandButton>
					</p:panelGrid>
				</p:outputPanel>
			</p:dialog>
		</h:form>

		<!-- REVIEW to może zostać jak jest, będę się jeszcze tymi formularzami zajmował -->
		<!-- DETAILS FORM -->
		<h:form id="details">
			<p:dialog header="#{sgr_translation.form_window_caption_details}"
				resizable="false" showEffect="explode" widgetVar="detailsDialog">
				<p:outputPanel id="panel" style="text-align:center;" layout="block">
					<p:panelGrid id="output" columns="2" columnClasses="label, value">
						<h:outputLabel
							value="#{sgr_translation.form_announcement_title} : *"
							for="title" />
						<h:outputText id="title" value="#{announcementPanel.entity.title}" />

						<h:outputLabel
							value="#{sgr_translation.form_announcement_date} : *" for="date" />
						<h:outputText value="#{announcementPanel.entity.date}"
							pattern="yyyy-MM-dd" />
						<h:outputLabel
							value="#{sgr_translation.form_announcement_message} : *"
							for="message" />
						<h:outputText id="message"
							value="#{announcementPanel.entity.message}" />
					</p:panelGrid>
				</p:outputPanel>
			</p:dialog>
		</h:form>
	</ui:define>

</ui:composition>